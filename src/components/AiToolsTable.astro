---
import type { AiTool } from '../data/aiTools';

interface Props {
  tools: AiTool[];
}

const { tools } = Astro.props;
---

<div class="table-container" id="aiToolsTable">
  <table role="grid" aria-label="AI编程工具对比表格">
    <thead>
      <tr>
        <th scope="col" data-zh="产品" data-en="Product">产品</th>
        <th scope="col" data-zh="所属" data-en="Company">所属</th>
        <th scope="col" data-zh="产品属性" data-en="Platform">产品属性</th>
      </tr>
    </thead>
    <tbody>
      {tools.map(tool => (
        <tr>
          <td>
            {tool.url ? (
              <a 
                href={tool.url} 
                target="_blank" 
                rel="noopener noreferrer"
                aria-label={`访问 ${tool.nameCn || tool.name} 官网`}>
                <span data-zh={tool.nameCn || tool.name} data-en={tool.name}>
                  {tool.nameCn || tool.name}
                </span>
              </a>
            ) : (
              <span data-zh={tool.nameCn || tool.name} data-en={tool.name}>
                {tool.nameCn || tool.name}
              </span>
            )}
          </td>
          <td>
            <span data-zh={tool.company} data-en={tool.company}>
              {tool.company}
            </span>
          </td>
          <td data-zh={tool.platform.zh} data-en={tool.platform.en}>
            {tool.platform.zh}
          </td>
        </tr>
      ))}
    </tbody>
  </table>
</div>

<script>
  // 初始化语言
  const currentLang = localStorage.getItem('language') || 'zh';
  updateTableContent(currentLang);

  // 监听语言变化
  window.addEventListener('languageChange', (event: CustomEvent) => {
    updateTableContent(event.detail.language);
  });

  function updateTableContent(language: string) {
    const table = document.getElementById('aiToolsTable');
    if (!table) return;

    // 更新所有带有 data-zh 和 data-en 属性的元素
    table.querySelectorAll('[data-zh][data-en]').forEach(el => {
      const text = el.getAttribute(`data-${language}`);
      if (text) {
        el.textContent = text;
      }
    });
  }
</script>

<style>
  .table-container {
    overflow-x: auto;
    margin: 2rem 0;
    border-radius: 0.5rem;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  }

  table {
    width: 100%;
    border-collapse: collapse;
    background: var(--bg-color);
  }

  th, td {
    padding: 1rem;
    text-align: left;
    border-bottom: 1px solid var(--border-color);
  }

  th {
    background: var(--header-bg);
    font-weight: 600;
  }

  tr:hover {
    background: var(--hover-color);
  }

  a {
    color: var(--primary-color);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  a:hover {
    text-decoration: underline;
  }

  @media (max-width: 640px) {
    th, td {
      padding: 0.75rem;
    }
  }
</style> 