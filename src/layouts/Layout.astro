---
import LanguageIcon from '../components/icons/LanguageIcon.astro';
import GithubIcon from '../components/icons/GithubIcon.astro';

interface Props {
	title: string;
	description: string;
}

const { title, description } = Astro.props;
---

<!doctype html>
<html lang="zh-CN">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="keywords" content="AI编程工具,代码助手,编程效率,AI代码生成,编程工具对比" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="canonical" href="https://ai-coding.netlify.app/" />
		<meta name="generator" content={Astro.generator} />
		<meta name="robots" content="index, follow" />
		<title>{title}</title>
		
		{/* Open Graph / Facebook */}
		<meta property="og:type" content="website" />
		<meta property="og:url" content="https://ai-coding.netlify.app/" />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:image" content="https://ai-coding.netlify.app/images/og-image.jpg" />

		{/* Twitter */}
		<meta property="twitter:card" content="summary_large_image" />
		<meta property="twitter:url" content="https://ai-coding.netlify.app/" />
		<meta property="twitter:title" content={title} />
		<meta property="twitter:description" content={description} />
		<meta property="twitter:image" content="https://ai-coding.netlify.app/images/og-image.jpg" />

		{/* JSON-LD */}
		<script type="application/ld+json">
		{
			"@context": "https://schema.org",
			"@type": "WebPage",
			"name": "{title}",
			"description": "{description}",
			"url": "https://ai-coding.netlify.app/",
			"image": "https://ai-coding.netlify.app/images/og-image.jpg",
			"mainEntity": {
				"@type": "Table",
				"about": "AI编程工具对比",
				"columns": ["产品", "所属", "产品属性", "收费情况"]
			}
		}
		</script>
	</head>
	<body>
		<header>
			<div class="header-content">
				<div class="logo">
				</div>
				<div class="header-right">
					<a href="https://github.com/yayxs/ai-coding" target="_blank" rel="noopener noreferrer" class="github-link">
						<GithubIcon />
					</a>
					<div class="language-switch">
						<button id="langSwitch" title="切换语言 / Switch Language">
							<LanguageIcon />
						</button>
					</div>
				</div>
			</div>
		</header>
		<slot />
	</body>
</html>

<script>
	const button = document.getElementById('langSwitch');
	const currentLang = localStorage.getItem('language') || 'zh';

	// 初始化语言状态
	document.documentElement.setAttribute('data-language', currentLang);

	// 语言切换事件监听
	button?.addEventListener('click', () => {
		const currentLang = localStorage.getItem('language') || 'zh';
		const newLang = currentLang === 'zh' ? 'en' : 'zh';
		localStorage.setItem('language', newLang);
		document.documentElement.setAttribute('data-language', newLang);

		// 触发自定义事件以通知页面内容更新
		window.dispatchEvent(new CustomEvent('languageChange', { detail: { language: newLang } }));
	});
</script>

<style is:global>
	:root {
		--bg-color: #ffffff;
		--text-color: #2c3e50;
		--header-bg: #f8f9fa;
		--header-text: #1a202c;
		--border-color: #e5e7eb;
		--hover-color: #f8fafc;
		--primary-color: #3b82f6;
	}

	html {
		font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif;
		background: var(--bg-color);
	}

	body {
		margin: 0;
		padding: 5rem 0 0;
		color: var(--text-color);
	}

	header {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		z-index: 1000;
		background: var(--header-bg);
		padding: 1rem 0;
		box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
	}

	.header-content {
		max-width: 1200px;
		margin: 0 auto;
		padding: 0 1rem;
		display: flex;
		justify-content: space-between;
		align-items: center;
	}

	.header-right {
		display: flex;
		align-items: center;
		gap: 1rem;
	}

	.github-link {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 2.5rem;
		height: 2.5rem;
		border: 1px solid var(--border-color);
		background: var(--bg-color);
		border-radius: 50%;
		color: var(--text-color);
		text-decoration: none;
		transition: all 0.2s ease;
	}

	.github-link:hover {
		background: var(--hover-color);
		transform: scale(1.05);
	}

	.logo {
		font-size: 1.8rem;
		color: var(--primary-color);
	}

	.language-switch button {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 2.5rem;
		height: 2.5rem;
		border: 1px solid var(--border-color);
		background: var(--bg-color);
		border-radius: 50%;
		cursor: pointer;
		transition: all 0.2s ease;
	}

	.language-switch button:hover {
		background: var(--hover-color);
		transform: scale(1.05);
	}

	.language-switch button:focus {
		outline: 2px solid var(--primary-color);
		outline-offset: 2px;
	}

	/* 简约滚动条样式 */
	::-webkit-scrollbar {
		width: 6px;
		height: 6px;
	}

	::-webkit-scrollbar-track {
		background: transparent;
	}

	::-webkit-scrollbar-thumb {
		background: rgba(0, 0, 0, 0.2);
		border-radius: 3px;
	}
</style>